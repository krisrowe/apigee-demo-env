export APIGEE_INSTANCE_JSON=$(curl -H "$AUTH" -s "https://apigee.googleapis.com/v1/organizations/$PROJECT_ID/instances" | jq -r ".instances[0]")
if [[ -z "$APIGEE_INSTANCE_JSON" || "$APIGEE_INSTANCE_JSON" = null ]]; then
    printf "${ERROR_COLOR}Project ${HIGHLIGHT_COLOR}${PROJECT_ID}${ERROR_COLOR} does not have an Apigee instance.\n${NO_COLOR}"
    exit 1
fi
export APIGEE_INSTANCE_NAME=$(echo $APIGEE_INSTANCE_JSON | jq -r ".name")
export APIGEE_INSTANCE_HOST_IP=$(echo $APIGEE_INSTANCE_JSON | jq -r ".host")
export APIGEE_INSTANCE_LOCATION=$(echo $APIGEE_INSTANCE_JSON | jq -r ".location")
export TARGET_SERVICE=$(echo $APIGEE_INSTANCE_JSON | jq -r '.serviceAttachment')
export APIGEE_HOST_NAME=$(curl -H "$AUTH" -s "https://apigee.googleapis.com/v1/organizations/${PROJECT_ID}/envgroups" | jq -r ".environmentGroups[0].hostnames[0]")

export DEFAULT_RESOURCE_NAME=apigee
export APIGEE_LB_ADDR_NAME=apigee-lb
export APIGEE_LB_IP=$(gcloud compute addresses list --filter="name=$APIGEE_LB_ADDR_NAME" \
    --global --project=$PROJECT_ID --format="value(address)")
export APIGEE_CERT_STATUS=$(gcloud compute ssl-certificates list \
  --filter="name:${DEFAULT_RESOURCE_NAME}" --format="value(MANAGED_STATUS)" 2> /dev/null)

printf "${INFO_COLOR}"

printf    "APIGEE INSTANCE DETAILS\n"
printf -- "-------------------------------------------\n"
printf "org: ${HIGHLIGHT_COLOR}${PROJECT_ID}${INFO_COLOR}\n"
printf "host name: ${HIGHLIGHT_COLOR}${APIGEE_HOST_NAME}${INFO_COLOR}\n"
printf "instance ip: ${HIGHLIGHT_COLOR}${APIGEE_INSTANCE_HOST_IP}${INFO_COLOR}\n"
printf "location: ${HIGHLIGHT_COLOR}${APIGEE_INSTANCE_LOCATION}${INFO_COLOR}\n"
printf "network: ${HIGHLIGHT_COLOR}${NETWORK_NAME}${INFO_COLOR}\n"
printf "load balancer: ${HIGHLIGHT_COLOR}${APIGEE_LB_IP}${INFO_COLOR}\n"
printf "certificate status: ${HIGHLIGHT_COLOR}${APIGEE_CERT_STATUS}${INFO_COLOR}\n"
printf -- "-------------------------------------------\n"
printf "${NO_COLOR}"



if [[ -z "$SUPPRESS_DESCRIBE" || "$SUPPRESS_DESCRIBE" = false ]]; then
    printf "${INFO_COLOR}\n"
    printf "INTERNAL ACCESS\n"
    printf -- "-------------------------------------------\n"
    printf "Try the following from a machine instance inside project ${HIGHLIGHT_COLOR}${PROJECT_ID}${INFO_COLOR} on the ${HIGHLIGHT_COLOR}${NETWORK_NAME}${INFO_COLOR} network...\n"
    echo
    printf "${EXAMPLE_COLOR}curl -k -H \"Host: ${APIGEE_HOST_NAME}\" \"https://${APIGEE_INSTANCE_HOST_IP}/hello-world\"\n"
    printf "${INFO_COLOR}\n"
    printf "Or even easier, run this command: ${EXAMPLE_COLOR}./demo test-internal-access${INFO_COLOR}\n"
    printf -- "-------------------------------------------${NO_COLOR}\n"
    
    printf "${INFO_COLOR}\n"
    printf "EXTERNAL ACCESS\n"
    printf -- "-------------------------------------------\n"
    if [[ -z "$APIGEE_LB_IP" ]]; then
        printf "External access has not yet been set up. Run the following."
        printf "\n"
        printf "${EXAMPLE_COLOR}./demo setup-external-access --domain={IP-ADDRESS}.nip.io${INFO_COLOR}\n"
    elif [[ "${APIGEE_CERT_STATUS}" = "PROVISIONING" ]]; then
        printf "SSL still provisioning. Try again later.\n"
    else
        echo "Try the following from ANYWHERE..."
        echo
        printf "${EXAMPLE_COLOR}curl https://${APIGEE_HOST_NAME}/hello-world${INFO_COLOR}\n"
    fi
    printf -- "-------------------------------------------${NO_COLOR}\n"
fi
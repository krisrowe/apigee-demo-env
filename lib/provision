gcloud services enable apigee.googleapis.com \
  servicenetworking.googleapis.com compute.googleapis.com \
  cloudkms.googleapis.com --project=$PROJECT_ID

export CONFIRM=$(gcloud alpha apigee organizations list --filter="name:${PROJECT_ID}" --format="value(name)")
if [[ -z "${CONFIRM}" ]]; then
  echo "Confirmed no Apigee organization exists for project ${PROJECT_ID}."
else
  printf "${WARN_COLOR}Apigee organization already exists for project ${PROJECT_ID}."
  exit
fi

export DEFAULT_LOCATION=$(gcloud config list compute/region --format=json | jq -r '.compute.region')
if [[ -z "${DEFAULT_LOCATION}" ]]; then
  printf "${ERROR_COLOR}Missing --location argument.${NO_COLOR}\n"
  exit 1
fi

if [[ -z "${NETWORK_NAME}" ]]; then
  printf "${ERROR_COLOR}Missing --network argument.${NO_COLOR}\n"
  exit 1
fi
export CONFIRM=$(gcloud compute networks list --project=$PROJECT_ID --format="value(name)" --filter="name:${NETWORK_NAME}")
if [[ -z "${CONFIRM}" ]]; then
  echo "Provisioning a network."
  gcloud compute networks create ${NETWORK_NAME} --project=$PROJECT_ID
else
  echo "Network previously provisioned."
fi

export APIGEE_PEERING_RANGE=apigee-peering
export CONFIRM=$(gcloud compute addresses list --project=$PROJECT_ID --format="value(name)" --filter="name=${APIGEE_PEERING_RANGE}")
if [[ -z "${CONFIRM}" ]]; then
  echo "Provisioning a peering address range without specifying addresses. Use --addresses instead to specify."
  gcloud compute addresses create $APIGEE_PEERING_RANGE \
    --global \
    --prefix-length=21 \
    --description="Peering range for Apigee services" \
    --network=$NETWORK_NAME \
    --purpose=VPC_PEERING \
    --project=$PROJECT_ID
else
  echo "Peering range previously reserved."
fi


export CONFIRM=$(gcloud compute addresses list --project=$PROJECT_ID --format="value(name)" --filter="name:google-managed-services-support-1")
if [[ -z "${CONFIRM}" ]]; then
  gcloud compute addresses create google-managed-services-support-1 \
    --global \
    --prefix-length=28 \
    --description="Peering range for supporting Apigee services" \
    --network=$NETWORK_NAME \
    --purpose=VPC_PEERING \
    --project=$PROJECT_ID
else
  echo "Support range previously created."
fi

export CONFIRM=$(gcloud services vpc-peerings list --network=$NETWORK_NAME --project=$PROJECT_ID --service=servicenetworking.googleapis.com --format="value(peering)")
if [[ -z "${CONFIRM}" ]]; then
  gcloud services vpc-peerings connect \
    --service=servicenetworking.googleapis.com \
    --network=$NETWORK_NAME \
    --ranges=$APIGEE_PEERING_RANGE,google-managed-services-support-1 \
    --project=$PROJECT_ID
else
  echo "VPC peering previously established."
fi

echo "Creating a Apigee organization ${PROJECT_ID}..."
gcloud alpha apigee organizations provision \
  --runtime-location=$DEFAULT_LOCATION \
  --analytics-region=$DEFAULT_LOCATION \
  --authorized-network=$NETWORK_NAME \
  --project=$PROJECT_ID